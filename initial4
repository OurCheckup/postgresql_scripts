--select initialreport()

--select distinct user_id from initial_3
--delete from initial_3 where target is null
--delete 
--select * from initial_3 where user_id=732
--select * from device_details where user_id = 682 
--update  public."Quaterly_Pivot" set initial = null  where user_id  = 726 and vital ='steps'
--select * from initial_3 where user_id = 732 and vital = 'steps'
--set initial = 2500 where user_id = 411 and vital = 'steps'
--select * from public."Quaterly_Pivot" where user_id = 750 and quarter = 1
--delete from initial_3 where user_id = 658
CREATE OR REPLACE FUNCTION public.initialreport(
	)
    RETURNS void
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
AS $BODY$
   DECLARE loop1 integer:=1; 
   DECLARE userid integer;
   DECLARE count1 integer;
   DECLARE vital_1 character varying(30);
   declare initial1 numeric(10,2);
Begin   

drop table  aa1;
create table aa1 (id int GENERATED ALWAYS AS IDENTITY,user_id int,vital character varying(30));
													
insert into aa1 (user_id,vital)
select distinct user_id,vital  from public."Quaterly_Pivot" where user_id not in
(select distinct user_id from initial_3) ;

select count (*) into count1 from aa1 ;

while (loop1<=(count1)) LOOP
select user_id into userid from aa1 where id=loop1;
select vital into vital_1 from aa1 where id=loop1;

if exists(select * from public."Quaterly_Pivot" where user_id=userid and vital=vital_1 and quarter=1) then
			  
select initial into initial1 
			   from public."Quaterly_Pivot" group by vital,user_id,initial,date,quarter
			   having date=min(date) and  user_id = userid and quarter=1 and 
			   vital=vital_1;
			   if(initial1 is not null) then
insert into initial_3 (vital,user_id,initial,target,date) 
			   select vital,user_id,initial,target,min(date) 
			   from public."Quaterly_Pivot" where user_id = userid and quarter=1 and vital=vital_1  group by vital,user_id,initial,target ;
end if;
			  
elsif  exists	
(select * from public."Quaterly_Pivot" where user_id=userid and vital=vital_1 and quarter=2) then	
select initial into initial1 
			   from public."Quaterly_Pivot" group by vital,user_id,initial,date,quarter
			   having date=min(date) and  user_id = userid and quarter=2 and 
			   vital=vital_1;
			   if(initial1 is not null) then

insert into initial_3 (vital,user_id,initial,target,date) select vital,user_id,initial,target,min(date)  from public."Quaterly_Pivot" where user_id = userid and quarter=2 and vital=vital_1  group by vital,user_id,initial,target ;
			   end if;
elsif  exists	
(select * from public."Quaterly_Pivot" where user_id=userid and vital=vital_1 and quarter=3) then	
select initial into initial1 
			   from public."Quaterly_Pivot" group by vital,user_id,initial,date,quarter
			   having date=min(date) and  user_id = userid and quarter=3 and 
			   vital=vital_1;
			   if(initial1 is not null) then
			   
insert into initial_3 (vital,user_id,initial,target,date) select vital,user_id,initial,target,min(date)  from public."Quaterly_Pivot" where user_id = userid and quarter=3 and vital=vital_1  group by vital,user_id,initial,target ;
end if;
			   elsif  exists	
(select * from public."Quaterly_Pivot" where user_id=userid and vital=vital_1 and quarter=4) then	
select initial into initial1 
			   from public."Quaterly_Pivot" group by vital,user_id,initial,date,quarter
			   having date=min(date) and  user_id = userid and quarter=4 and 
			   vital=vital_1;
			   if(initial1 is not null) then

insert into initial_3 (vital,user_id,initial,target,date) select vital,user_id,initial,target,min(date)  from public."Quaterly_Pivot" where user_id = userid and quarter=4 and vital=vital_1  group by vital,user_id,initial,target ;
			   			   
end if;
			   end if;
loop1 :=loop1+1;
end loop;
			   
			   
					end;
			$BODY$;

ALTER FUNCTION public.initialreport()
    OWNER TO postgres;			   
			   			   			   
			   